---
import {
  IInterventionFrontmatter,
  IInterventionPoi,
} from "@interfaces/IIntervention";
import { InterventionMap } from "@components";
import "mapbox-gl/dist/mapbox-gl.css";
import mapbox from "mapbox-gl";
import {
  trimAndSortInterventions,
  transformInterventionsToPoiData,
} from "@util/ContentTransformer";

interface Props {
  count?: number;
}

const { count } = Astro.props;

const rawInterventionsContent = await Astro.glob<IInterventionFrontmatter>(
  "../pages/en/interventions/*.mdx"
);

const trimmedAndSorted = trimAndSortInterventions(
  rawInterventionsContent,
  count
);
const sortedPoiData = transformInterventionsToPoiData(trimmedAndSorted);

const bounds = sortedPoiData.reduce((bounds, poi) => {
  return bounds.extend([poi.locationLngLat.lng, poi.locationLngLat.lat]);
}, new mapbox.LngLatBounds(sortedPoiData[0].locationLngLat, sortedPoiData[0].locationLngLat));
---

<InterventionMap
  client:only="react"
  token={import.meta.env.PUBLIC_MAPBOX_TOKEN}
  interventions={sortedPoiData}
  bounds={bounds.toArray() as [[number, number], [number, number]]}
/>
