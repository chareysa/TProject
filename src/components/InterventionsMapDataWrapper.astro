---
import type { IInterventionFrontmatter } from "@interfaces/IIntervention";
import { InterventionMap } from "@components";
import "mapbox-gl/dist/mapbox-gl.css";
import mapbox from "mapbox-gl";
import {
  trimAndSortInterventions,
  transformInterventionsToPoiData,
} from "@util/ContentTransformer";
import { getMapPois } from "@util/Airtable";

interface Props {
  count?: number;
}

const { count } = Astro.props;

const rawInterventionsContent = await Astro.glob<
  Partial<IInterventionFrontmatter>
>("../pages/en/interventions/*.mdx");

const trimmedAndSorted = trimAndSortInterventions(
  rawInterventionsContent,
  count
);

const sortedPoiData = transformInterventionsToPoiData(trimmedAndSorted);

const airtablePois = await getMapPois();

const combinedPois = [...(airtablePois || []), ...sortedPoiData];


const bounds = combinedPois.reduce(
  (bounds, poi) => {
    return bounds.extend(poi.locationLngLat);
  },
  new mapbox.LngLatBounds(
    sortedPoiData[0].locationLngLat,
    sortedPoiData[0].locationLngLat
  )
);
---

<InterventionMap
  client:only="react"
  token={import.meta.env.PUBLIC_MAPBOX_TOKEN}
  interventions={combinedPois}
  bounds={bounds.toArray() as [[number, number], [number, number]]}
/>
