---
import { Course } from "@components";
import { transformAcademy } from "@util/ContentTransformer";
import type { AcademyPageFrontmatter } from "@interfaces/IAcademy";
import type { ICourse } from "@components/Course";

const { language = "en" } = Astro.props;

// Only get files named index.mdx that are inside of a subfolder within the academy folder

let rawAcademyContent;
if (language === "ua") {
  rawAcademyContent = await Astro.glob<AcademyPageFrontmatter>(
    "../pages/ua/academy/*/*.mdx"
  );
} else {
  rawAcademyContent = await Astro.glob<AcademyPageFrontmatter>(
    "../pages/en/academy/*/*.mdx"
  );
}
const coursesAndLessons = transformAcademy(rawAcademyContent);
---

{
  Object.values(coursesAndLessons).map((course) => {
    const lessons = course?.children?.map((child) => ({
      title: child.frontmatter.title,
      target: child.url,
    }));
    return (
      <Course
        course={
          {
            title: course.frontmatter.title,
            img: course.frontmatter.img,
            imgAlt: course.frontmatter.imgAlt,
            items: lessons,
          } as ICourse
        }
      />
    );
  })
}
