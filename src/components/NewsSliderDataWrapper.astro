---
import { NewsSliderComponent } from "@components";
import { writeFileSync } from "fs";

const { headline, id, ...rest } = Astro.props;

const AIRTABLE_BASE_URL = "https://api.airtable.com/v0/";
const token = import.meta.env.PUBLIC_AIRTABLE_TOKEN;

const options = {
  method: "GET",
  headers: {
    Authorization: `Bearer ${token}`,
  },
};

const response = await fetch(
  AIRTABLE_BASE_URL + "appy8mE1ZpLXfYzEQ/tblvfXTgnme0tqIQD",
  options
);

const data = await response.json();

let news = [];

if (data.records && data.records.length > 0) {
  try {
    writeFileSync(
      "./fetch.json",
      JSON.stringify(data.records)
    );
    // file written successfully
  } catch (err) {
    console.error("Error while writing file", err);
  }
  news = data.records
    // has Instagram URL
    .filter((record) => record.fields?.["Instagram URL"])
    // has status "live"
    .filter((record) => record.fields?.["Status"] === "live")
    // is of media type "photo"
    .filter((record) => record.fields?.["Media type"]?.includes("photo"))
    // has images
    .filter((record) => record.fields?.["Selected Photos (from Event)"]?.length)
    .map((record) => {
      return {
        title: record.fields.Name,
        target: record.fields?.["Instagram URL"],
        instagram: true,
        image:
          record.fields?.["Selected Photos (from Event)"]?.[0].thumbnails?.[
            "large"
          ]?.url,
      };
    });
  console.log("NEWS", news);
} else {
  console.log("Error");
}
---

<NewsSliderComponent {news} {headline} {id} {...rest} client:idle />
